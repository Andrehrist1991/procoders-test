[{"D:\\Mywork\\GitHub\\procoders-test\\src\\index.js":"1","D:\\Mywork\\GitHub\\procoders-test\\src\\reportWebVitals.js":"2","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\store.js":"3","D:\\Mywork\\GitHub\\procoders-test\\src\\App.js":"4","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\actions\\rate.js":"5","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\reducers\\index.js":"6","D:\\Mywork\\GitHub\\procoders-test\\src\\components\\index.js":"7","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\reducers\\rate.js":"8","D:\\Mywork\\GitHub\\procoders-test\\src\\components\\CryptoItem.jsx":"9","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\sagas.js":"10","D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\types.js":"11","D:\\Mywork\\GitHub\\procoders-test\\src\\components\\CryptoCalculator.jsx":"12","D:\\Mywork\\GitHub\\procoders-test\\src\\components\\Loader.jsx":"13"},{"size":648,"mtime":1607534368593,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":503,"mtime":1607536831464,"results":"17","hashOfConfig":"15"},{"size":1982,"mtime":1607637745569,"results":"18","hashOfConfig":"15"},{"size":2445,"mtime":1607611639577,"results":"19","hashOfConfig":"15"},{"size":162,"mtime":1607637387545,"results":"20","hashOfConfig":"15"},{"size":167,"mtime":1607632408766,"results":"21","hashOfConfig":"15"},{"size":2868,"mtime":1607633427692,"results":"22","hashOfConfig":"15"},{"size":1058,"mtime":1607629959242,"results":"23","hashOfConfig":"15"},{"size":513,"mtime":1607637596716,"results":"24","hashOfConfig":"15"},{"size":306,"mtime":1607637429606,"results":"25","hashOfConfig":"15"},{"size":2163,"mtime":1607636950949,"results":"26","hashOfConfig":"15"},{"size":408,"mtime":1607637881443,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qb9iw3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Mywork\\GitHub\\procoders-test\\src\\index.js",[],["56","57"],"D:\\Mywork\\GitHub\\procoders-test\\src\\reportWebVitals.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\store.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\App.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\actions\\rate.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\reducers\\index.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\components\\index.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\reducers\\rate.js",["58"],"import { SET_RATES_CRYPTO, SET_RATES_CURRENCY, SET_CURRENCY_PRICES, SELECT_CRYPTO } from '../types'\r\n\r\nconst initialState = {\r\n    cryptoArr: [],\r\n    currencyArr: [],\r\n    selectedCrypto: {},\r\n    changeRates: {\r\n        \"usd\": 1,\r\n        \"uah\": null,\r\n        \"rub\": null,\r\n    },\r\n    isLoaded: false\r\n};\r\n\r\nconst geItemPriceBuy = (array, search) => {\r\n    var i = array.length;\r\n    while (i--) {\r\n        if (array[i].ccy === search) {\r\n           return array[i].buy;\r\n        }\r\n    }\r\n}\r\n\r\nconst geItemPriceSale = (array, search) => {\r\n    var i = array.length;\r\n    while (i--) {\r\n        if (array[i].ccy === search) {\r\n           return array[i].sale;\r\n        }\r\n    }\r\n}\r\n\r\nconst rate = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_RATES_CRYPTO: {\r\n\r\n            const filtered = action.payload.filter((price) => {\r\n                return price.priceUsd = parseFloat(price.priceUsd);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cryptoArr: filtered,\r\n                isLoaded: true\r\n            }\r\n        }\r\n        case SET_RATES_CURRENCY: {\r\n\r\n            const filtered = action.payload.filter((price) => {\r\n                return price.buy = parseFloat(price.buy), \r\n                price.sale = parseFloat(price.sale);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                currencyArr: filtered\r\n            }\r\n        }\r\n        case SET_CURRENCY_PRICES: {\r\n            const arrOFcurrencies = [\r\n                ...state.currencyArr\r\n            ]\r\n\r\n            const usdByu = geItemPriceBuy(arrOFcurrencies, \"USD\");\r\n            const usdSale = geItemPriceSale(arrOFcurrencies, \"USD\");\r\n\r\n            const usdMiddle = (parseFloat(usdByu) + parseFloat(usdSale)) / 2;\r\n\r\n            const rurBuy = geItemPriceBuy(arrOFcurrencies, \"RUR\");\r\n            const rurSale = geItemPriceSale(arrOFcurrencies, \"RUR\");\r\n\r\n            const rurMiddle = (parseFloat(rurBuy) + parseFloat(rurSale)) / 2;\r\n\r\n            return {\r\n                ...state,\r\n                changeRates: {\r\n                    \"usd\": 1,\r\n                    \"uah\": usdMiddle,\r\n                    \"rub\": usdMiddle / rurMiddle\r\n                }\r\n            }\r\n        }\r\n        case SELECT_CRYPTO: {\r\n            const oldItems = [\r\n                ...state.cryptoArr,\r\n            ];\r\n\r\n            //Change object in array\r\n            const newList = oldItems.map(o => {\r\n                if (o.id === action.payload.id) {\r\n                return action.payload;\r\n                }\r\n                return o;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cryptoArr: newList,\r\n                selectedCrypto: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rate;","D:\\Mywork\\GitHub\\procoders-test\\src\\components\\CryptoItem.jsx",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\sagas.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\redux\\types.js",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\components\\CryptoCalculator.jsx",[],"D:\\Mywork\\GitHub\\procoders-test\\src\\components\\Loader.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":50,"column":57,"nodeType":"65","messageId":"66","endLine":50,"endColumn":58},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]